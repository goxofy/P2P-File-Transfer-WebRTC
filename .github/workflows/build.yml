name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            target: node18-linux-x64
            output: p2p-transfer-linux-x64
          - runner: ubuntu-latest
            target: node18-linux-arm64
            output: p2p-transfer-linux-arm64
          - runner: macos-latest
            target: node18-macos-x64
            output: p2p-transfer-macos-x64
          - runner: macos-14
            target: node18-macos-arm64
            output: p2p-transfer-macos-arm64
          - runner: windows-latest
            target: node18-win-x64
            output: p2p-transfer-windows-x64.exe
    
    runs-on: ${{ matrix.runner }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: npm install
      
    - name: Install pkg globally
      run: npm install -g pkg
      
    - name: Build binary
      run: |
        mkdir -p dist
        pkg cli/index.js --targets ${{ matrix.target }} --out-path dist --compress GZip
        
    - name: Rename binary (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd dist
        ls -la
        if [ -f "index-linux" ]; then
          mv index-linux ${{ matrix.output }}
          echo "Renamed index-linux to ${{ matrix.output }}"
        elif [ -f "index-linux-arm64" ]; then
          mv index-linux-arm64 ${{ matrix.output }}
          echo "Renamed index-linux-arm64 to ${{ matrix.output }}"
        elif [ -f "index-macos" ]; then
          mv index-macos ${{ matrix.output }}
          echo "Renamed index-macos to ${{ matrix.output }}"
        elif [ -f "index-macos-arm64" ]; then
          mv index-macos-arm64 ${{ matrix.output }}
          echo "Renamed index-macos-arm64 to ${{ matrix.output }}"
        elif [ -f "index" ]; then
          mv index ${{ matrix.output }}
          echo "Renamed index to ${{ matrix.output }}"
        else
          echo "No binary found to rename"
          exit 1
        fi
        ls -la
        
    - name: Rename binary (Windows)
      if: runner.os == 'Windows'
      run: |
        cd dist
        Get-ChildItem -Force
        if (Test-Path "index-win.exe") {
          Move-Item "index-win.exe" "${{ matrix.output }}"
          Write-Host "Renamed index-win.exe to ${{ matrix.output }}"
        } elseif (Test-Path "index.exe") {
          Move-Item "index.exe" "${{ matrix.output }}"
          Write-Host "Renamed index.exe to ${{ matrix.output }}"
        } else {
          Write-Host "No binary found to rename"
          exit 1
        }
        Get-ChildItem -Force
      shell: powershell
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}
        path: dist/${{ matrix.output }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*/p2p-transfer-*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}